name: Release

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, '[skip release]')
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.RELEASE_BOT_APP_ID }}
          private-key: ${{ secrets.RELEASE_BOT_APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          # Add token with repo permissions and persist credentials so that it
          # can push the major version tag.
          persist-credentials: true

      - name: Enable corepack
        run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install PNPM Dev Dependencies
        # Also, installs semantic-release and plugins for the release step.
        # This allows them to be managed in the package.json and kept up to date
        # with Dependabot.
        run: |
          pnpm i --frozen-lockfile

      - name: Generate release files
        run: |
          pnpm run build

      - name: Update Action Inputs/Outputs in README.md
        # Must run before semantic-release to be included in release commit.
        uses: mdvorak/update-action-readme@v1


      - name: Run semantic-release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Push Floating Major Version Tag
        if: steps.semantic-release.outputs.new_release_major_version != ''
        run: |
          VERSION="${{ steps.semantic-release.outputs.new_release_version }}"
          MAJOR_VERSION="v${{ steps.semantic-release.outputs.new_release_major_version }}"

          git config --global user.email "192361297+argocd-diff-action-bot[bot]@users.noreply.github.com"
          git config --global user.name "argocd-diff-action-bot[bot]"

          echo "Creating/Updating major version tag..."
          git tag -fa ${MAJOR_VERSION} -m "Floating major version tag. The latest release for it is: ${VERSION}" "${VERSION}"
          git push origin ${MAJOR_VERSION} --force
